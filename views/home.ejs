        <%- include('cdn') %>
        <style>
            *{
                outline: none !important;
            }
            .active-link {
                background-color: #d1d5db !important;
            }
            .active-link p {
                color: #000000 !important;
            }
            .active-link span.num {
                background-color: #ffffff !important;
            }
            header::-webkit-scrollbar {
                width: 5px;
            }
            header::-webkit-scrollbar-thumb {
                height: 1px !important;
                background: #a8a8a8;
            }
        </style>
    </head>
    <body>
        <!-- Header -->
        <div id="ajax-home">
            <header
                class="bg-[#f4f4f4] h-screen w-[300px] px-10 py-5 fixed top-0 left-0 bottom-0 overflow-y-scroll"
                id="header"
            >
                <nav class="h-full flex flex-col justify-between">
                    <!-- Logo & Toggle -->
                    <a href="/" class="w-fit mx-auto text-center">
                        <img
                            src="/img/logo.png"
                            alt="logo"
                            title="logo"
                            class="w-[150px]"
                        />
                    </a>
                    <!-- Tasks Table -->
                    <div>
                        <p class="text-xs font-medium my-2">TASKS</p>
                        <ul class="ml-1 pb-5 border-b">
                            <li>
                                <button
                                    onclick="return viewUpcomingTask()"
                                    class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500 w-full"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <i
                                            class="fa-solid fa-angles-right text-zinc-400 mr-3"
                                        ></i>
                                        Upcoming
                                    </p>
                                    <span
                                        class="num w-[35px] text-center font-semibold text-sm bg-zinc-200 rounded-lg text-stone-700 group-hover:bg-white"
                                        ><%= upcomingCount %></span
                                    >
                                </button>
                            </li>
                            <li>
                                <a
                                    href="/"
                                    class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500 active-link w-full"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <i
                                            class="fa-solid fa-list-check text-zinc-400 mr-3"
                                        ></i>
                                        Today
                                    </p>
                                    <span
                                        class="num w-[35px] text-center font-semibold text-sm bg-zinc-200 rounded-lg text-stone-700 group-hover:bg-white"
                                        ><%= todayCount %></span
                                    >
                                </a>
                            </li>
                        </ul>
                    </div>

                    <!-- Lists Table -->
                    <div>
                        <p class="text-xs font-medium my-2">Lists</p>
                        <ul class="ml-1 pb-5 border-b">
                            <li>
                                <button
                                    onclick="return viewAllTaskFun()"
                                    class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500 w-full"
                                    id="allTaskBtn"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <span
                                            class="border-2 h-4 w-4 inline-block mr-3 rounded-md"
                                        ></span>
                                        All
                                    </p>
                                    <span
                                        class="num w-[35px] text-center font-semibold text-sm bg-zinc-200 rounded-lg text-stone-700 group-hover:bg-white"
                                        ><%= countTaskData %></span
                                    >
                                </button>
                            </li>
                            <% for(let lData of listData){ %>
                            <li class="relative">
                                <div
                                    class="group py-2 px-3 flex items-center justify-between rounded-lg hover:bg-gray-300 trasition-all duration-500 <% if(listId == lData.id){ %> active-link <% } %>"
                                >
                                    <button
                                        onclick="return viewTaskOnListFun('<%= lData.id %>')"
                                        class="flex justify-between w-[-webkit-fill-available]"
                                    >
                                        <p
                                            class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black before:bg-[<%= lData.listColor %>] before:h-4 before:w-4 before:inline-block before:mr-3 before:rounded-md"
                                        >
                                            <%= lData.listName %>
                                        </p>
                                        <span
                                            class="num w-[35px] text-center font-semibold text-sm bg-zinc-200 rounded-lg text-stone-700 group-hover:bg-white mr-5"
                                            ><%= lData.taskIds.length %></span
                                        >
                                    </button>
                                    <button
                                        onclick="return editListModel('<%= lData.id %>')"
                                    >
                                        <span class="text-xs text-stone-500">
                                            <i
                                                class="fa-solid fa-angle-right"
                                            ></i>
                                        </span>
                                    </button>
                                </div>
                            </li>
                            <% } %>
                            <li>
                                <button
                                    onclick="return listModel()"
                                    class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500 w-full"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <span
                                            class="h-4 w-4 inline-block mr-3 rounded-md mb-[4px]"
                                        >
                                            <i class="fa-solid fa-plus"></i>
                                        </span>
                                        Add New List
                                    </p>
                                </button>
                            </li>
                        </ul>
                    </div>

                    <!-- Tags Table -->
                    <div>
                        <p class="text-xs font-medium my-2">Tags</p>
                        <ul class="pb-5 flex flex-wrap">
                            <% for(let tData of tagData){ %>
                            <li class="mr-1">
                                <button
                                    onclick="return viewTaskOnTagFun('<%= tData.id %>')"
                                    class="group font-bold text-[13px] bg-[#d1eaed] text-stone-500 py-[5px] px-3 rounded-lg trasition-all duration-500 mb-2"
                                >
                                    <%= tData.tagName %>
                                </button>
                            </li>
                            <% } %>
                            <li class="mr-1">
                                <button
                                    onclick="return tagModel()"
                                    class="group font-bold text-[13px] bg-[#ebebeb] py-[5px] px-3 rounded-lg hover:bg-gray-300 hover:text-black trasition-all duration-500"
                                >
                                    + Add Tag
                                </button>
                            </li>
                        </ul>
                    </div>

                    <!-- Account Table -->
                    <div>
                        <ul>
                            <li class="relative">
                                <button
                                    onclick="return showMenu()"
                                    class="w-full group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <i
                                            class="fa-solid fa-gear text-zinc-400 mr-3"
                                        ></i>
                                        Account Settings
                                    </p>
                                </button>
                                <ul class="flex flex-col hidden absolute bottom-full bg-white rounded-lg w-full" id="menu-list">
                                    <li>
                                        <button onclick="return viewProfileFun('65e434814027ab6ea49b1329')" class="w-full py-2 px-3 group flex items-center justify-between rounded-lg hover:bg-gray-300 trasition-all duration-500">
                                            <p class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black">
                                                <i class="fa-solid fa-user text-zinc-400 mr-3"></i>
                                                Profile
                                            </p>
                                        </button>
                                    </li>
                                    <li>
                                        <a href="/logoutUser" class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500">
                                            <p class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black">
                                                <i class="fa-solid fa-unlock text-zinc-400 mr-3"></i>
                                                Change Password
                                            </p>
                                        </a>
                                    </li>
                                    <li>
                                        <a href="/logoutUser" class="group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500">
                                            <p class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black">
                                                <i class="fa-solid fa-power-off text-zinc-400 mr-3"></i>
                                                Log Out
                                            </p>
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </nav>
            </header>
            <main class="ml-[300px] px-6">
                <div id="after-flex">
                    <section id="main-body">
                        <div class="pt-3 pb-8">
                            <div class="flex items-center justify-between">
                                <h2 class="text-4xl font-bold">
                                    Today
                                    <span
                                        class="border font-semibold inline-block h-[45px] w-[45px] text-center leading-[45px] rounded-lg ml-5"
                                        ><%= todayCount %></span
                                    >
                                </h2>
                            </div>
                        </div>
                        <ul>
                            <li>
                                <button
                                    onclick="return taskModel()"
                                    class="w-full group flex items-center justify-between py-2 px-3 rounded-lg hover:bg-gray-300 trasition-all duration-500 border-b"
                                >
                                    <p
                                        class="font-medium text-sm text-stone-500 flex items-center group-hover:text-black"
                                    >
                                        <span
                                            class="h-4 w-4 inline-block mr-3 rounded-md mb-[4px]"
                                        >
                                            <i class="fa-solid fa-plus"></i>
                                        </span>
                                        Add New Task
                                    </p>
                                </button>
                            </li>
                            <% if(taskData != ""){for(let tData of taskData){ if(tData.status == "pending"){ %>
                            <li
                                class="border-b hover:rounded-lg trasition-all duration-300"
                            >
                                <div
                                    class="sub flex flex-wrap items-center justify-between hover:bg-gray-300 duration-300 rounded-lg py-2 px-3"
                                >
                                    <div class="w-11/12">
                                        <div
                                            class="flex items-center w-[-webkit-fill-available]"
                                        >
                                            <input
                                                type="radio"
                                                name="task-pending"
                                                onchange="assignToComplete('<%= tData.id %>','','today')"
                                            />
                                            <p
                                                id="<%= tData.id %>"
                                                class="font-medium text-sm text-stone-500 ml-3"
                                            >
                                                <%= tData.taskName %>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="w-1/12 text-end">
                                        <button
                                            onclick="return editTaskModel('<%= tData.id %>')"
                                            class="rounded-lg trasition-all text-stone-500 duration-500"
                                        >
                                            <i
                                                class="fa-solid fa-angle-right"
                                            ></i>
                                        </button>
                                    </div>
                                    <% dd = tData.dueDate.split(/\D/g) %> <% let
                                    date = [dd[2],dd[1],dd[0]].join("-") %>
                                    <div class="ml-6">
                                        <div class="flex items-center">
                                            <span class="flex items-center">
                                                <i
                                                    class="font-medium text-stone-500 ms-0.5 fa-solid fa-calendar-xmark"
                                                ></i>
                                                <p
                                                    class="font-medium text-xs text-stone-500 ml-2"
                                                >
                                                    <%= date %>
                                                </p>
                                            </span>
                                            <span
                                                class="w-[1.5px] h-5 bg-zinc-200 mx-5"
                                            ></span>
                                            <span class="flex items-center">
                                                <span
                                                    class="bg-[<%= tData.taskList.listColor %>] h-4 w-4 inline-block rounded-md"
                                                ></span>
                                                <p
                                                    class="font-medium text-xs text-stone-500 ml-2"
                                                >
                                                    <%= tData.taskList.listName
                                                    %>
                                                </p>
                                            </span>
                                            <span
                                                class="w-[1.5px] h-5 bg-zinc-200 mx-5"
                                            ></span>
                                            <span class="flex items-center">
                                                <% for(let tgData of tagData){
                                                %>
                                                <span
                                                    class="font-bold text-[13px] bg-[#d1eaed] py-[5px] px-3 rounded-lg ms-2 <% if(tData.taskTags.includes(tgData.id)){ %> block <% } else { %> hidden <% } %>"
                                                >
                                                    <p
                                                        class="font-medium text-xs text-stone-500"
                                                    >
                                                        <%= tgData.tagName %>
                                                    </p>
                                                </span>
                                                <% } %>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <% } } } else{ %>
                            <li
                                class="border-b hover:rounded-lg trasition-all duration-300 py-3 text-center"
                            >
                                <p class="text-3xl text-stone-500">
                                    No avaliable task
                                </p>
                            </li>
                            <% } %>
                        </ul>

                            <!-- Accordion Item 1 -->
                            <div class="rounded-md mb-4">
                              <button class="w-full text-left px-3 py-2 hover:bg-gray-300 focus:outline-none w-fit" id="btn-acc" onclick="return accordianFun()"><i id="icon-acc" class="fa-solid fa-chevron-right fa-chevron-down trasition-all duration-500"></i> Completed</button>
                              <div class="px-4 py-2 hidden" id="content-acc">
                                <ul>
                                    <% for(let tData of taskData){ if(tData.status == "complete"){ %>
                                        <li
                                            class="border-b hover:rounded-lg trasition-all duration-300"
                                        >
                                            <div
                                                class="sub flex flex-wrap items-center justify-between hover:bg-gray-300 duration-300 rounded-lg py-2 px-3"
                                            >
                                                <div class="w-11/12">
                                                    <div
                                                        class="flex items-center w-[-webkit-fill-available]"
                                                    >
                                                        <input
                                                            type="radio"
                                                            onclick="assignToPending('<%= tData.id %>','','today')"
                                                            id="<%= tData.id %>-radio"
                                                            checked=""
                                                        />
                                                        <p
                                                            id="<%= tData.id %>"
                                                            class="font-medium text-sm text-stone-500 ml-3 line-through"
                                                        >
                                                            <%= tData.taskName %>
                                                        </p>
                                                    </div>
                                                </div>
                                                <div class="w-1/12 text-end">
                                                    <button
                                                        onclick="return editTaskModel('<%= tData.id %>')"
                                                        class="rounded-lg trasition-all text-stone-500 duration-500"
                                                    >
                                                        <i
                                                            class="fa-solid fa-angle-right"
                                                        ></i>
                                                    </button>
                                                </div>
                                                <% dd = tData.dueDate.split(/\D/g) %> <% let
                                                date = [dd[2],dd[1],dd[0]].join("-") %>
                                                <div class="ml-6">
                                                    <div class="flex items-center">
                                                        <span class="flex items-center">
                                                            <i
                                                                class="font-medium text-stone-500 ms-0.5 fa-solid fa-calendar-xmark"
                                                            ></i>
                                                            <p
                                                                class="font-medium text-xs text-stone-500 ml-2"
                                                            >
                                                                <%= date %>
                                                            </p>
                                                        </span>
                                                        <span
                                                            class="w-[1.5px] h-5 bg-zinc-200 mx-5"
                                                        ></span>
                                                        <span class="flex items-center">
                                                            <span
                                                                class="bg-[<%= tData.taskList.listColor %>] h-4 w-4 inline-block rounded-md"
                                                            ></span>
                                                            <p
                                                                class="font-medium text-xs text-stone-500 ml-2"
                                                            >
                                                                <%= tData.taskList.listName
                                                                %>
                                                            </p>
                                                        </span>
                                                        <span
                                                            class="w-[1.5px] h-5 bg-zinc-200 mx-5"
                                                        ></span>
                                                        <span class="flex items-center">
                                                            <% for(let tgData of tagData){
                                                            %>
                                                            <span
                                                                class="font-bold text-[13px] bg-[#d1eaed] py-[5px] px-3 rounded-lg ms-2 <% if(tData.taskTags.includes(tgData.id)){ %> block <% } else { %> hidden <% } %>"
                                                            >
                                                                <p
                                                                    class="font-medium text-xs text-stone-500"
                                                                >
                                                                    <%= tgData.tagName %>
                                                                </p>
                                                            </span>
                                                            <% } %>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    <% } } %>
                                </ul>
                              </div>
                            </div>
                          <!-- </div> -->
  
                    </section>

                    <section id="task-model" class="relative"></section>
                </div>
            </main>
        </div>

        <!-- Javascript -->
        <script>
            let taskModel = () => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: "/add_task_model",
                    method: "get",
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let editTaskModel = (taskId) => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: "/edit_task_model",
                    method: "post",
                    data: {
                        taskId: taskId,
                    },
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let listModel = () => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: "/add_list_model",
                    method: "get",
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let editListModel = (listId) => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: "/edit_list_model",
                    method: "post",
                    data: {
                        listId: listId,
                    },
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let confirmDeleteList = (listId) => {
                let check = confirm(
                    "All task will be delete which assign to this list.\nAre you sure you want to delete?"
                );
                if (check) {
                    $.ajax({
                        url: `/deleteList/?id=${listId}`,
                        method: "get",
                        success: () => {},
                    });
                }
            };

            let viewTaskOnListFun = (id) => {
                $.ajax({
                    url: `/viewTaskOnList/?id=${id}`,
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res);
                    },
                });
            };

            let tagModel = () => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: "/add_tag_model",
                    method: "get",
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let viewTaskOnTagFun = (id) => {
                $.ajax({
                    url: `/viewTaskOnTag/?id=${id}`,
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res);
                    },
                });
            };

            let viewProfileFun = (id) => {
                document
                    .getElementById("task-model")
                    .classList.remove("hidden");
                document
                    .getElementById("task-model")
                    .classList.add("w-[400px]");
                document.querySelector("main").classList.add("pe-0");
                document
                    .getElementById("after-flex")
                    .classList.add("flex", "justify-between");
                document
                    .getElementById("main-body")
                    .classList.add("w-8/12", "h-screen");
                $.ajax({
                    url: `/viewProfile/?id=${id}`,
                    method: "get",
                    success: (res) => {
                        $("#task-model").html(res);
                    },
                });
            };

            let assignToComplete = (id, listId, type) => {
                document.getElementById(id).classList.add("line-through")
                $.ajax({
                    url: `/assignToComplete/?id=${id}&listId=${listId}&type=${type}`,
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res)
                    }
                })
            }
            
            let assignToPending = (id, listId, type) => {
                document.getElementById(`${id}-radio`).checked = false; 
                $.ajax({
                    url: `/assignToPending/?id=${id}&listId=${listId}&type=${type}`,
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res)
                    }
                })
            }

            let viewUpcomingTask = () => {
                $.ajax({
                    url: "/upcomingTask",
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res)
                    }
                })
            }

            let viewAllTaskFun = () => {
                $.ajax({
                    url: "/viewAllTask",
                    method: "get",
                    success: (res) => {
                        $("#ajax-home").html(res)
                    }
                })
            }

            let closeModel = () => {
                document.querySelector("main").classList.remove("pe-0");
                document.getElementById("main-body").classList.remove("w-8/12");
                document.getElementById("main-body").classList.add("w-full");
                document.getElementById("task-model").classList.add("hidden");
            };
            
            let accordianFun = () => {
                document.getElementById("content-acc").classList.toggle("hidden")
                document.getElementById("icon-acc").classList.toggle("fa-chevron-right")
            };

            let showMenu = () => {
                document.getElementById('menu-list').classList.toggle('hidden')
            }
        </script>
        <% if(locals.flash.success && locals.flash.success.length > 0){ %>
        <script>
            new Noty({
                type: "success",
                layout: "topRight",
                text: "<%= locals.flash.success %>",
                timeout: 2000,
            }).show();
        </script>
        <% } else if(locals.flash.error && locals.flash.error.length > 0) { %>
        <script>
            new Noty({
                type: "error",
                layout: "topRight",
                text: "<%= locals.flash.error %>",
                timeout: 2000,
            }).show();
        </script>
        <% } %>
    </body>
</html>
